{"code":"var EventEmitter = /** @class */ (function () {\r\n    function EventEmitter() {\r\n        this.subMap = new Map();\r\n    }\r\n    EventEmitter.prototype.on = function (eventName, callback) {\r\n        var cbs;\r\n        if ((cbs = this.subMap.get(eventName))) {\r\n            cbs.push(callback);\r\n        }\r\n        else {\r\n            this.subMap.set(eventName, [callback]);\r\n        }\r\n    };\r\n    EventEmitter.prototype.emit = function (eventName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var cbs;\r\n        if ((cbs = this.subMap.get(eventName))) {\r\n            for (var _a = 0, cbs_1 = cbs; _a < cbs_1.length; _a++) {\r\n                var cb = cbs_1[_a];\r\n                cb.apply(void 0, args);\r\n            }\r\n        }\r\n    };\r\n    return EventEmitter;\r\n}());\r\nexport default EventEmitter;\r\n","references":[],"dts":{"name":"D:/PROJECT/v-editor/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/utils/eventEmitter.d.ts","writeByteOrderMark":false,"text":"export declare type EventEmitterFn = (...args: any) => any;\r\nexport default class EventEmitter {\r\n    subMap: Map<string, EventEmitterFn[]>;\r\n    constructor();\r\n    on(eventName: string, callback: EventEmitterFn): void;\r\n    emit(eventName: string, ...args: any[]): void;\r\n}\r\n"}}
