{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditorActions, Tools } from \"../../../store/editorReducer\";\r\nimport { Undo, Redo, PanTool, NearMe } from '@material-ui/icons';\r\nimport { Button, Tooltip } from \"@material-ui/core\";\r\nimport { request } from \"../../../api/request\";\r\nvar actUndo = EditorActions.actUndo, actRedo = EditorActions.actRedo, actSelectTool = EditorActions.actSelectTool;\r\nvar tools = [\r\n    { Icon: NearMe, type: Tools.Select, title: \"选择\" },\r\n    { Icon: PanTool, type: Tools.Drag, title: \"移动画布\" },\r\n];\r\nvar HeaderConfig = function (_a) {\r\n    var dispatch = _a.dispatch, workPlace = _a.workPlace;\r\n    var generateCode = function () {\r\n        request.post(\"generate\");\r\n    };\r\n    return (_jsxs(\"header\", __assign({ className: \"header-config pointer flex ac jb\" }, { children: [_jsxs(\"div\", __assign({ className: \"tools flex ac\" }, { children: [tools.map(function (_a) {\r\n                        var Icon = _a.Icon, type = _a.type, title = _a.title;\r\n                        return _jsx(Tooltip, __assign({ placement: \"bottom\", title: title, color: \"blue\" }, { children: _jsx(\"div\", __assign({ className: \"tool-item flex jc ac \" + (workPlace.selectedTool === type\r\n                                    ? \"active\" : \"\"), onClick: function () {\r\n                                    dispatch(actSelectTool(workPlace.selectedTool === type ? null : type));\r\n                                } }, { children: _jsx(Icon, {}, void 0) }), void 0) }), type);\r\n                    }),\r\n                    _jsx(\"div\", __assign({ className: \"tool-item flex jc ac \" }, { children: _jsx(Undo, { onClick: dispatch.bind(null, actUndo()) }, void 0) }), void 0),\r\n                    _jsx(\"div\", __assign({ className: \"tool-item flex jc ac \" }, { children: _jsx(Redo, { onClick: dispatch.bind(null, actRedo()) }, void 0) }), void 0)] }), void 0),\r\n            _jsxs(\"div\", { children: [_jsx(Button, __assign({ color: \"primary\", variant: \"contained\", onClick: generateCode }, { children: \"\\u751F\\u6210\\u6E90\\u4EE3\\u7801\" }), void 0),\r\n                    _jsx(Button, __assign({ variant: \"outlined\", color: \"primary\" }, { children: \"\\u5BFC\\u51FAJSON\" }), void 0)] }, void 0)] }), void 0));\r\n};\r\nexport default connect(function (state) { return ({\r\n    workPlace: state.editorReducer.workplace\r\n}); })(HeaderConfig);\r\n","references":["D:/PROJECT/v-editor/node_modules/@types/react/index.d.ts","D:/PROJECT/v-editor/node_modules/@types/react-redux/index.d.ts","D:/PROJECT/v-editor/node_modules/redux/index.d.ts","D:/PROJECT/v-editor/src/store/editorReducer.ts","D:/PROJECT/v-editor/node_modules/@material-ui/icons/index.d.ts","D:/PROJECT/v-editor/src/store/index.ts","D:/PROJECT/v-editor/node_modules/@material-ui/core/index.d.ts","D:/PROJECT/v-editor/src/api/request.ts"],"dts":{"name":"D:/PROJECT/v-editor/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/pages/work-place/operators/HeaderConfig.d.ts","writeByteOrderMark":false,"text":"import { FC } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Tools } from \"../../../store/editorReducer\";\r\ndeclare const _default: import(\"react-redux\").ConnectedComponent<FC<{\r\n    dispatch: Dispatch<import(\"redux\").AnyAction>;\r\n    workPlace: {\r\n        renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n        selectedIndex: number[] | null;\r\n        canvas: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n            centerPosition: {\r\n                x: number;\r\n                y: number;\r\n                scale: number;\r\n            };\r\n        };\r\n        selectArea: import(\"../../../store/editorReducer\").Pos;\r\n        undoStack: {\r\n            renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n            selectedIndex: number[] | null;\r\n            selectArea: import(\"../../../store/editorReducer\").Pos;\r\n            selectedTool: Tools | null;\r\n        }[];\r\n        redoStack: {\r\n            renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n            selectedIndex: number[] | null;\r\n            selectArea: import(\"../../../store/editorReducer\").Pos;\r\n            selectedTool: Tools | null;\r\n        }[];\r\n        selectedTool: Tools | null;\r\n        tmpPos: import(\"../../../store/editorReducer\").Pos[];\r\n    };\r\n}>, import(\"react-redux\").Omit<{\r\n    dispatch: Dispatch<import(\"redux\").AnyAction>;\r\n    workPlace: {\r\n        renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n        selectedIndex: number[] | null;\r\n        canvas: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n            centerPosition: {\r\n                x: number;\r\n                y: number;\r\n                scale: number;\r\n            };\r\n        };\r\n        selectArea: import(\"../../../store/editorReducer\").Pos;\r\n        undoStack: {\r\n            renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n            selectedIndex: number[] | null;\r\n            selectArea: import(\"../../../store/editorReducer\").Pos;\r\n            selectedTool: Tools | null;\r\n        }[];\r\n        redoStack: {\r\n            renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n            selectedIndex: number[] | null;\r\n            selectArea: import(\"../../../store/editorReducer\").Pos;\r\n            selectedTool: Tools | null;\r\n        }[];\r\n        selectedTool: Tools | null;\r\n        tmpPos: import(\"../../../store/editorReducer\").Pos[];\r\n    };\r\n}, \"dispatch\" | \"workPlace\">>;\r\nexport default _default;\r\n"}}
