{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { memo } from \"react\";\r\nimport { EditorActions } from \"../../../store/editorReducer\";\r\nimport { Button, Input } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport produce from \"immer\";\r\nvar actResetDraw = EditorActions.actResetDraw, actMoveCanvasToCenter = EditorActions.actMoveCanvasToCenter, actChangeCanvasWH = EditorActions.actChangeCanvasWH;\r\nvar GeneralConfig = function (_a) {\r\n    var dispatch = _a.dispatch, workplace = _a.workplace;\r\n    return (_jsxs(\"div\", { children: [_jsxs(\"div\", { children: [\"\\u7F51\\u9875\\u5BBD\\u5EA6\", _jsx(Input, { value: workplace.renderConfig.pos.w, onChange: function (e) {\r\n                            dispatch(actChangeCanvasWH(produce(workplace.renderConfig.pos, function (it) {\r\n                                var val;\r\n                                if ((val = Number(e.target.value))) {\r\n                                    it.w = Number(val);\r\n                                }\r\n                            })));\r\n                        } }, void 0)] }, void 0),\r\n            _jsxs(\"div\", { children: [\"\\u7F51\\u9875\\u9AD8\\u5EA6\", _jsx(Input, { value: workplace.renderConfig.pos.h, onChange: function (e) {\r\n                            dispatch(actChangeCanvasWH(produce(workplace.renderConfig.pos, function (it) {\r\n                                var val;\r\n                                if ((val = Number(e.target.value))) {\r\n                                    it.h = val;\r\n                                }\r\n                            })));\r\n                        } }, void 0)] }, void 0),\r\n            _jsxs(\"div\", { children: [\"\\u7F29\\u653E \", (workplace.canvas.scale * 100).toFixed(0), \"%\"] }, void 0),\r\n            _jsx(Button, __assign({ color: \"secondary\", variant: \"contained\", onClick: function () {\r\n                    dispatch(actMoveCanvasToCenter());\r\n                } }, { children: \"\\u91CD\\u7F6E\\u753B\\u5E03\\u4F4D\\u7F6E\" }), void 0),\r\n            _jsx(Button, __assign({ color: \"secondary\", variant: \"contained\", onClick: function () {\r\n                    dispatch(actResetDraw());\r\n                } }, { children: \"\\u91CD\\u7F6E\\u753B\\u5E03\" }), void 0)] }, void 0));\r\n};\r\nexport default connect(function (state) { return ({\r\n    workplace: state.editorReducer.workplace\r\n}); }, function (dispatch) { return ({ dispatch: dispatch }); })(memo(GeneralConfig));\r\n","references":["D:/PROJECT/v-editor/node_modules/@types/react/index.d.ts","D:/PROJECT/v-editor/node_modules/redux/index.d.ts","D:/PROJECT/v-editor/src/store/editorReducer.ts","D:/PROJECT/v-editor/node_modules/@material-ui/core/index.d.ts","D:/PROJECT/v-editor/node_modules/@types/react-redux/index.d.ts","D:/PROJECT/v-editor/src/store/index.ts","D:/PROJECT/v-editor/node_modules/immer/dist/immer.d.ts"],"dts":{"name":"D:/PROJECT/v-editor/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/pages/work-place/operators/canvasConfig.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { Dispatch } from \"redux\";\r\ndeclare const _default: import(\"react-redux\").ConnectedComponent<import(\"react\").NamedExoticComponent<{\r\n    dispatch: Dispatch<import(\"redux\").AnyAction>;\r\n    workplace: {\r\n        renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n        selectedIndex: number[] | null;\r\n        canvas: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n            centerPosition: {\r\n                x: number;\r\n                y: number;\r\n                scale: number;\r\n            };\r\n        };\r\n        selectArea: import(\"../../../store/editorReducer\").Pos;\r\n        undoStack: {\r\n            renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n            selectedIndex: number[] | null;\r\n            selectArea: import(\"../../../store/editorReducer\").Pos;\r\n            selectedTool: import(\"../../../store/editorReducer\").Tools | null;\r\n        }[];\r\n        redoStack: {\r\n            renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n            selectedIndex: number[] | null;\r\n            selectArea: import(\"../../../store/editorReducer\").Pos;\r\n            selectedTool: import(\"../../../store/editorReducer\").Tools | null;\r\n        }[];\r\n        selectedTool: import(\"../../../store/editorReducer\").Tools | null;\r\n        tmpPos: import(\"../../../store/editorReducer\").Pos[];\r\n    };\r\n}>, import(\"react-redux\").Omit<{\r\n    dispatch: Dispatch<import(\"redux\").AnyAction>;\r\n    workplace: {\r\n        renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n        selectedIndex: number[] | null;\r\n        canvas: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n            centerPosition: {\r\n                x: number;\r\n                y: number;\r\n                scale: number;\r\n            };\r\n        };\r\n        selectArea: import(\"../../../store/editorReducer\").Pos;\r\n        undoStack: {\r\n            renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n            selectedIndex: number[] | null;\r\n            selectArea: import(\"../../../store/editorReducer\").Pos;\r\n            selectedTool: import(\"../../../store/editorReducer\").Tools | null;\r\n        }[];\r\n        redoStack: {\r\n            renderConfig: import(\"../../../render/interfaces\").RenderConfig;\r\n            selectedIndex: number[] | null;\r\n            selectArea: import(\"../../../store/editorReducer\").Pos;\r\n            selectedTool: import(\"../../../store/editorReducer\").Tools | null;\r\n        }[];\r\n        selectedTool: import(\"../../../store/editorReducer\").Tools | null;\r\n        tmpPos: import(\"../../../store/editorReducer\").Pos[];\r\n    };\r\n}, \"workplace\" | \"dispatch\">>;\r\nexport default _default;\r\n"}}
