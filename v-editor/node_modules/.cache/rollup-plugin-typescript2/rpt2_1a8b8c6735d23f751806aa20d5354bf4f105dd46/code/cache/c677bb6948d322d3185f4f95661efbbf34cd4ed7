{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useCallback, useEffect, useRef, useState, useMemo } from \"react\";\r\nimport produce from \"immer\";\r\nimport { fromEvent, Subject } from \"rxjs\";\r\nimport { tap, map, switchMap, takeUntil, filter } from \"rxjs/operators\";\r\nimport { StickFlags, createRefLine, getOffsetLeft, getOffsetTop } from \"../utils\";\r\nimport { EditorActions } from \"../store/editorReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport NotFound from \"../widgets/not-found\";\r\nvar actSelectOne = EditorActions.actSelectOne, actWidgetConfig = EditorActions.actWidgetConfig;\r\nexport var RenderWidget = function (_a) {\r\n    var _b;\r\n    var selected = _a.selected, idx = _a.idx, container = _a.container, setRefLines = _a.setRefLines, allWidgets = _a.allWidgets, widgetConfig = _a.widgetConfig, dispatch = _a.dispatch, createWidgets = _a.createWidgets, eventPool = _a.eventPool;\r\n    var _c = useState(__assign({}, widgetConfig.pos)), layout = _c[0], setLayout = _c[1];\r\n    var setPos = useCallback(function (_a) {\r\n        var x = _a.x, y = _a.y;\r\n        setLayout(function (lay) { return (__assign(__assign({}, lay), { x: x, y: y })); });\r\n    }, []);\r\n    var containerLeft = useMemo(function () { return getOffsetLeft(container.current); }, [container]);\r\n    var containerTop = useMemo(function () { return getOffsetTop(container.current); }, [container]);\r\n    var containerHeight = useMemo(function () { return container.current && container.current.offsetHeight; }, [container]);\r\n    var containerWidth = useMemo(function () { return container.current && container.current.offsetWidth; }, [container]);\r\n    var thisDiv = useRef(null);\r\n    var setReferenceLine = useCallback(function (pos, stickTo) {\r\n        if (stickTo === void 0) { stickTo = StickFlags.NO_STICK; }\r\n        /**\r\n         * 坐标轴数据结构, 第三个参数0：其它元素参考线 | 1：当前选择的参考线\r\n         * [0, 45, 0] --- 平行于x轴, 坐标 0 45， 宽度100%\r\n         * [1, 45, 0] --- 平行于y轴, 坐标 45 0， 高度100%\r\n         */\r\n        var otherPositions = allWidgets\r\n            .filter(function (_, i) { return (i !== idx); }) //排除掉当前选中的\r\n            .map(function (widget) {\r\n            var _a = widget.pos, x = _a.x, y = _a.y, w = _a.w, h = _a.h;\r\n            return ({ x: x, y: y, w: w, h: h });\r\n        });\r\n        otherPositions.push({\r\n            x: 0,\r\n            y: 0,\r\n            w: containerWidth || container.current.offsetWidth,\r\n            h: containerHeight || container.current.offsetHeight\r\n        });\r\n        var _a = createRefLine(pos, otherPositions, stickTo), lines = _a[0], left = _a[1], top = _a[2];\r\n        setRefLines(lines);\r\n        return [left, top];\r\n    }, [allWidgets, container, containerHeight, containerWidth, idx, setRefLines]);\r\n    useEffect(function () {\r\n        var ele = thisDiv.current;\r\n        var containerOffsetTop = containerTop || getOffsetLeft(container.current);\r\n        var containerOffsetLeft = containerLeft || getOffsetTop(container.current);\r\n        var currLayout = __assign({}, widgetConfig.pos);\r\n        /**\r\n         * TIP: 这里我为什么要用一个局部临时变量保存坐标信息？\r\n         * 因为如果直接访问layout的话，根据react的eslint标准会将layout作为\r\n         * useEffect的依赖项，在每一次移动的时候layout会改变，然后该useEffect\r\n         * 会重新执行，导致触发useEffect的清理函数，导致移动操作失败。但是如果\r\n         * 我用临时变量最开始就保存好坐标信息，然后在移动过程中setLayout采用函\r\n         * 数形式的更新，这样layout就不会作为useEffect的依赖，就不会在移动过程\r\n         * 重新执行useEffect导致滑动失败\r\n         */\r\n        /** */\r\n        var mouseDown$ = fromEvent(ele, \"mousedown\").pipe(tap(function (e) {\r\n            e.stopPropagation();\r\n            dispatch(actSelectOne(idx));\r\n        }));\r\n        var mouseMove$ = fromEvent(document, \"mousemove\");\r\n        /**每次鼠标移动之后改变mainConfig中的layout */\r\n        var mouseUp$ = fromEvent(document, \"mouseup\");\r\n        var mouseUp2PosChange$ = mouseUp$.pipe(tap(function () {\r\n            dispatchPosChange(currLayout);\r\n        }));\r\n        var subClearRefLines = mouseUp$.subscribe(function () {\r\n            setRefLines([]);\r\n        });\r\n        var subMove = mouseDown$.pipe(map(function (e) { return ({\r\n            offsetLeft: e.pageX - containerOffsetLeft - ele.offsetLeft,\r\n            offsetTop: e.pageY - containerOffsetTop - ele.offsetTop\r\n        }); }), switchMap(function (_a) {\r\n            var offsetLeft = _a.offsetLeft, offsetTop = _a.offsetTop;\r\n            return mouseMove$.pipe(map(function (e) { return ({\r\n                x: e.pageX - containerOffsetLeft - offsetLeft || 0,\r\n                y: e.pageY - containerOffsetTop - offsetTop || 0,\r\n            }); }), map(function (res) {\r\n                var _a = setReferenceLine({\r\n                    x: res.x,\r\n                    y: res.y,\r\n                    w: currLayout.w,\r\n                    h: currLayout.h\r\n                }, StickFlags.STICK_COL | StickFlags.STICK_ROW), x = _a[0], y = _a[1];\r\n                return { x: x, y: y };\r\n            }), tap(function (_a) {\r\n                var x = _a.x, y = _a.y;\r\n                currLayout.x = x;\r\n                currLayout.y = y;\r\n            }), takeUntil(mouseUp2PosChange$));\r\n        })).subscribe(setPos);\r\n        /**控制放大缩小的几个小圆点div, L:left T:Top R:right B:bottom */\r\n        var dotLT = dLT.current;\r\n        var dotLB = dLB.current;\r\n        var dotRT = dRT.current;\r\n        var dotRB = dRB.current;\r\n        var dotLM = dLM.current;\r\n        var dotRM = dRM.current;\r\n        var dotMT = dMT.current;\r\n        var dotMB = dMB.current;\r\n        var resizeMouseDown$ = new Subject();\r\n        var subResize = resizeMouseDown$.pipe(map(function (dir) { return ({\r\n            dir: dir,\r\n            _layout: widgetConfig.pos\r\n        }); }), switchMap(function (_a) {\r\n            var dir = _a.dir, _layout = _a._layout;\r\n            return mouseMove$.pipe(map(function (e) {\r\n                var newX = e.pageX - containerOffsetLeft;\r\n                var newY = e.pageY - containerOffsetTop;\r\n                var pos = widgetConfig.pos;\r\n                var newHeight = pos.h;\r\n                var newWidth = pos.w;\r\n                switch (dir) {\r\n                    case \"lt\": {\r\n                        /**当前是点击左上角，应该找右下角坐标 */\r\n                        var rbX = pos.x + pos.w;\r\n                        var rbY = pos.y + pos.h;\r\n                        newWidth = rbX - newX;\r\n                        newHeight = rbY - newY;\r\n                        break;\r\n                    }\r\n                    case \"lb\": {\r\n                        /**当前是点击左下角，应该找右上角坐标 */\r\n                        var rtX = pos.x + pos.w;\r\n                        var rtY = pos.y;\r\n                        newWidth = rtX - newX;\r\n                        newHeight = newY - rtY;\r\n                        newY = newY - newHeight;\r\n                        break;\r\n                    }\r\n                    case \"rb\": {\r\n                        /**当前点击右下角，找左上角坐标 */\r\n                        var ltX = pos.x;\r\n                        var ltY = pos.y;\r\n                        newWidth = newX - ltX;\r\n                        newHeight = newY - ltY;\r\n                        newX = newX - newWidth;\r\n                        newY = newY - newHeight;\r\n                        break;\r\n                    }\r\n                    case \"rt\": {\r\n                        /**当前点击右上角，找左下角坐标 */\r\n                        var lbX = pos.x;\r\n                        var lbY = pos.y + pos.h;\r\n                        newWidth = newX - lbX;\r\n                        newHeight = lbY - newY;\r\n                        newX = newX - newWidth;\r\n                        break;\r\n                    }\r\n                    case \"lm\": {\r\n                        /**点击左侧中间小圆点，可以左右移动 */\r\n                        newWidth = pos.x + pos.w - newX;\r\n                        newY = pos.y;\r\n                        break;\r\n                    }\r\n                    case \"rm\": {\r\n                        /**点击右侧中间小圆点，可以左右移动 */\r\n                        newWidth = newX - pos.x;\r\n                        newX = pos.x;\r\n                        newY = pos.y;\r\n                        break;\r\n                    }\r\n                    case \"mt\": {\r\n                        /**点击中间上方圆点 */\r\n                        newHeight = pos.h + pos.y - newY;\r\n                        newX = pos.x;\r\n                        break;\r\n                    }\r\n                    case \"mb\": {\r\n                        /**点击中间下方圆点 */\r\n                        newHeight = newY - pos.y;\r\n                        newX = pos.x;\r\n                        newY = pos.y;\r\n                        break;\r\n                    }\r\n                    default: return _layout;\r\n                }\r\n                /**\r\n                * Tips:\r\n                * 此时newX,newY,newWidth,newHeight是下一次页面上应该\r\n                * 渲染的坐标信息，算一下参考线和吸附。复杂原因在于，吸\r\n                * 附后，x和y坐标吸附上去了，但是宽和高都没有变，这样不\r\n                * 符合常理，例如：\r\n                * 点击右上角，右上角吸附到了边界这个时候你会发现左下角\r\n                * 对应也移动了一小段吸附的距离，但是我点击右上角进行缩\r\n                * 放，左下角应该是钉死的。因此根据不同情况来“钉死”某些\r\n                * 坐标，因此记录下当前四个坐标\r\n                **/\r\n                var posLT = [newX, newY];\r\n                var posRT = [newX + newWidth, newY];\r\n                var posLB = [newX, newY + newHeight];\r\n                var posRB = [newX + newWidth, newY + newHeight];\r\n                var _a = setReferenceLine({\r\n                    x: newX,\r\n                    y: newY,\r\n                    w: newWidth,\r\n                    h: newHeight,\r\n                }, dir === \"lm\" || dir === \"rm\"\r\n                    ? StickFlags.STICK_ROW\r\n                    : dir === \"mt\" || dir === \"mb\"\r\n                        ? StickFlags.STICK_COL\r\n                        : StickFlags.STICK_ROW | StickFlags.STICK_COL), stickX = _a[0], stickY = _a[1];\r\n                /**吸附后四个坐标值 */\r\n                var stickedLT = [stickX, stickY];\r\n                var stickedRT = [stickX + newWidth, stickY];\r\n                var stickedLB = [stickX, stickY + newHeight];\r\n                var stickedRB = [stickX + newWidth, stickY + newHeight];\r\n                switch (dir) {\r\n                    case \"lt\":\r\n                        newWidth = posRB[0] - stickedLT[0];\r\n                        newHeight = posRB[1] - stickedLT[1];\r\n                        newX = stickX;\r\n                        newY = stickY;\r\n                        break;\r\n                    case \"mt\":\r\n                        newHeight = posLB[1] - stickedLT[1];\r\n                        newY = stickY;\r\n                        break;\r\n                    case \"rt\":\r\n                        newWidth = stickedRB[0] - posLT[0];\r\n                        newHeight = stickedRB[1] - posLT[1];\r\n                        break;\r\n                    case \"lm\":\r\n                        newWidth = posRT[0] - stickedLT[0];\r\n                        newX = stickX;\r\n                        break;\r\n                    case \"rm\":\r\n                        newWidth = stickedRT[0] - posLT[0];\r\n                        break;\r\n                    case \"lb\":\r\n                        newWidth = posRB[0] - stickedLT[0];\r\n                        newHeight = stickedLB[1] - posLT[1];\r\n                        newX = stickX;\r\n                        break;\r\n                    case \"mb\":\r\n                        newHeight = stickedLB[1] - posLT[1];\r\n                        break;\r\n                    case \"rb\":\r\n                        newWidth = stickedRB[0] - posLT[0];\r\n                        newHeight = stickedRB[1] - posLT[1];\r\n                        break;\r\n                }\r\n                return {\r\n                    x: newX,\r\n                    y: newY,\r\n                    w: newWidth,\r\n                    h: newHeight\r\n                };\r\n            }), filter(function (l) { return l.h >= 10 && l.w >= 10; }), /**要求高度大于10，宽度大于10 */ tap(function (l) { return currLayout = l; }), /**将当前坐标信息存在一个临时变量用于下面提交更新 */ takeUntil(mouseUp2PosChange$));\r\n        })).subscribe(function (_a) {\r\n            var x = _a.x, y = _a.y, w = _a.w, h = _a.h;\r\n            setLayout(function (l) { return (__assign(__assign({}, l), { x: x, y: y, w: w, h: h })); });\r\n        });\r\n        var dispatchPosChange = function (pos) {\r\n            dispatch(actWidgetConfig(produce(widgetConfig, function (it) {\r\n                Reflect.ownKeys(pos).forEach(function (k) {\r\n                    /**@ts-ignore */\r\n                    it.pos[k] = pos[k];\r\n                });\r\n            })));\r\n        };\r\n        var resizeLT = function (e) {\r\n            e.stopPropagation();\r\n            resizeMouseDown$.next(\"lt\");\r\n        };\r\n        var resizeRT = function (e) {\r\n            e.stopPropagation();\r\n            resizeMouseDown$.next(\"rt\");\r\n        };\r\n        var resizeLB = function (e) {\r\n            e.stopPropagation();\r\n            resizeMouseDown$.next(\"lb\");\r\n        };\r\n        var resizeRB = function (e) {\r\n            e.stopPropagation();\r\n            resizeMouseDown$.next(\"rb\");\r\n        };\r\n        var resizeLM = function (e) {\r\n            e.stopPropagation();\r\n            resizeMouseDown$.next(\"lm\");\r\n        };\r\n        var resizeRM = function (e) {\r\n            e.stopPropagation();\r\n            resizeMouseDown$.next(\"rm\");\r\n        };\r\n        var resizeMT = function (e) {\r\n            e.stopPropagation();\r\n            resizeMouseDown$.next(\"mt\");\r\n        };\r\n        var resizeMB = function (e) {\r\n            e.stopPropagation();\r\n            resizeMouseDown$.next(\"mb\");\r\n        };\r\n        dotLT.addEventListener(\"mousedown\", resizeLT);\r\n        dotRT.addEventListener(\"mousedown\", resizeRT);\r\n        dotLB.addEventListener(\"mousedown\", resizeLB);\r\n        dotRB.addEventListener(\"mousedown\", resizeRB);\r\n        dotLM.addEventListener(\"mousedown\", resizeLM);\r\n        dotRM.addEventListener(\"mousedown\", resizeRM);\r\n        dotMT.addEventListener(\"mousedown\", resizeMT);\r\n        dotMB.addEventListener(\"mousedown\", resizeMB);\r\n        return function () {\r\n            subMove.unsubscribe();\r\n            subClearRefLines.unsubscribe();\r\n            subResize.unsubscribe();\r\n            dotLT.removeEventListener(\"mousedown\", resizeLT);\r\n            dotRT.removeEventListener(\"mousedown\", resizeRT);\r\n            dotLB.removeEventListener(\"mousedown\", resizeLB);\r\n            dotRB.removeEventListener(\"mousedown\", resizeRB);\r\n            dotLM.removeEventListener(\"mousedown\", resizeLM);\r\n            dotRM.removeEventListener(\"mousedown\", resizeRM);\r\n            dotMT.removeEventListener(\"mousedown\", resizeMT);\r\n            dotMB.removeEventListener(\"mousedown\", resizeMB);\r\n        };\r\n    }, [container, containerLeft, containerTop, dispatch, idx, setPos, setRefLines, setReferenceLine, widgetConfig]);\r\n    /**LT代表left top，左上角的div，其它同理 */\r\n    var dLT = useRef(null);\r\n    var dMT = useRef(null);\r\n    var dRT = useRef(null);\r\n    var dLM = useRef(null);\r\n    var dRM = useRef(null);\r\n    var dLB = useRef(null);\r\n    var dMB = useRef(null);\r\n    var dRB = useRef(null);\r\n    /**监听config改变并且重新赋值给layout */\r\n    useEffect(function () {\r\n        setLayout(widgetConfig.pos);\r\n    }, [widgetConfig.pos]);\r\n    var WidgetComponent = createWidgets(widgetConfig) || NotFound.FC;\r\n    return (_jsxs(\"div\", __assign({ className: \"absolute wrap-widget \" + (selected ? \"select\" : \"\"), ref: thisDiv, style: {\r\n            left: layout.x + \"px\",\r\n            top: layout.y + \"px\",\r\n            width: layout.w + \"px\",\r\n            height: layout.h + \"px\",\r\n            zIndex: ((_b = widgetConfig.style) === null || _b === void 0 ? void 0 : _b.zIndex) || 0,\r\n        }, title: \"x:\" + layout.x + \" y:\" + layout.y + \" w:\" + layout.w + \" h:\" + layout.h }, { children: [_jsx(WidgetComponent, { config: widgetConfig.config, pos: layout, style: widgetConfig.style, eventPool: eventPool }, void 0),\r\n            _jsx(\"div\", { className: \"move-dot lt\", ref: dLT }, void 0),\r\n            _jsx(\"div\", { className: \"move-dot mt\", ref: dMT }, void 0),\r\n            _jsx(\"div\", { className: \"move-dot rt\", ref: dRT }, void 0),\r\n            _jsx(\"div\", { className: \"move-dot lm\", ref: dLM }, void 0),\r\n            _jsx(\"div\", { className: \"move-dot rm\", ref: dRM }, void 0),\r\n            _jsx(\"div\", { className: \"move-dot lb\", ref: dLB }, void 0),\r\n            _jsx(\"div\", { className: \"move-dot mb\", ref: dMB }, void 0),\r\n            _jsx(\"div\", { className: \"move-dot rb\", ref: dRB }, void 0)] }), void 0));\r\n};\r\nexport default connect(function (state) {\r\n    var workplace = state.editorReducer.workplace;\r\n    return {\r\n        allWidgets: workplace.renderConfig.widgets\r\n    };\r\n}, function (dispatch) { return ({ dispatch: dispatch }); })(RenderWidget);\r\n","references":["D:/PROJECT/v-editor/node_modules/@types/react/index.d.ts","D:/PROJECT/v-editor/node_modules/redux/index.d.ts","D:/PROJECT/v-editor/src/render/interfaces.ts","D:/PROJECT/v-editor/node_modules/immer/dist/immer.d.ts","D:/PROJECT/v-editor/node_modules/rxjs/dist/types/index.d.ts","D:/PROJECT/v-editor/node_modules/rxjs/dist/types/operators/index.d.ts","D:/PROJECT/v-editor/src/utils/index.ts","D:/PROJECT/v-editor/src/store/editorReducer.ts","D:/PROJECT/v-editor/node_modules/@types/react-redux/index.d.ts","D:/PROJECT/v-editor/src/store/index.ts","D:/PROJECT/v-editor/src/widgets/not-found/index.tsx","D:/PROJECT/v-editor/src/utils/eventEmitter.ts"],"dts":{"name":"D:/PROJECT/v-editor/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/render/RenderWidget.d.ts","writeByteOrderMark":false,"text":"import { FC, Dispatch, RefObject, ComponentClass } from \"react\";\r\nimport { Dispatch as ReduxDispatch } from \"redux\";\r\nimport type { WidgetConfig, WidgetProps } from \"./interfaces\";\r\nimport EventEmitter from \"../utils/eventEmitter\";\r\ninterface WrapperProps {\r\n    selected: boolean;\r\n    widgetConfig: WidgetConfig;\r\n    idx: number;\r\n    container: RefObject<HTMLDivElement>;\r\n    setRefLines: Dispatch<[number, number, number][]>;\r\n    dispatch: ReduxDispatch;\r\n    allWidgets: WidgetConfig[];\r\n    createWidgets: (config: WidgetConfig) => FC<WidgetProps> | ComponentClass<WidgetProps> | null;\r\n    eventPool: EventEmitter;\r\n}\r\nexport declare const RenderWidget: FC<WrapperProps>;\r\ndeclare const _default: import(\"react-redux\").ConnectedComponent<FC<WrapperProps>, import(\"react-redux\").Omit<WrapperProps, \"allWidgets\" | \"dispatch\">>;\r\nexport default _default;\r\n"}}
