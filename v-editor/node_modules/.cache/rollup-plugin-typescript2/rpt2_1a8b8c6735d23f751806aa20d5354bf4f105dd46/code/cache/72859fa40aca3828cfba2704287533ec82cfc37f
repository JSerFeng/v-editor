{"code":"import { combineReducers, createStore } from \"redux\";\r\nimport editorReducer from './editorReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nvar reducersMap = {\r\n    editorReducer: editorReducer\r\n};\r\nvar store = createStore(combineReducers(reducersMap), composeWithDevTools());\r\nexport { store };\r\n","references":["D:/PROJECT/v-editor/node_modules/redux/index.d.ts","D:/PROJECT/v-editor/src/store/editorReducer.ts","D:/PROJECT/v-editor/node_modules/redux-devtools-extension/index.d.ts"],"dts":{"name":"D:/PROJECT/v-editor/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/store/index.d.ts","writeByteOrderMark":false,"text":"declare const reducersMap: {\r\n    editorReducer: import(\"redux\").Reducer<import(\"./editorReducer\").BaseState, import(\"./editorReducer\").GetActionTypes<{\r\n        actSelect: (indexes: number[] | null) => {\r\n            type: import(\"./editorReducer\").Types.SelectMultiple;\r\n            payload: number[] | null;\r\n        };\r\n        actSelectOne: (idx: number | null) => {\r\n            type: import(\"./editorReducer\").Types.SelectOne;\r\n            payload: number | null;\r\n        };\r\n        actChangeCanvasWH: (pos: {\r\n            w: number;\r\n            h: number;\r\n        }) => {\r\n            type: import(\"./editorReducer\").Types.ChangeCanvasWH;\r\n            payload: {\r\n                w: number;\r\n                h: number;\r\n            };\r\n        };\r\n        actAddItem: (config: import(\"../render/interfaces\").WidgetConfig) => {\r\n            type: import(\"./editorReducer\").Types.AddItem;\r\n            payload: import(\"../render/interfaces\").WidgetConfig;\r\n        };\r\n        actWidgetConfig: (config: import(\"../render/interfaces\").WidgetConfig) => {\r\n            type: import(\"./editorReducer\").Types.WidgetConfig;\r\n            payload: import(\"../render/interfaces\").WidgetConfig;\r\n        };\r\n        actStartWidgetPos: (initPos: import(\"./editorReducer\").Pos) => {\r\n            type: import(\"./editorReducer\").Types.StartWidgetChange;\r\n            payload: import(\"./editorReducer\").Pos;\r\n        };\r\n        actChangeWidgetPos: (deltaX: number, deltaY: number) => {\r\n            type: import(\"./editorReducer\").Types.ChangeWidgetPos;\r\n            payload: {\r\n                deltaX: number;\r\n                deltaY: number;\r\n            };\r\n        };\r\n        actCommitChangeWidgetPos: (pos: import(\"./editorReducer\").Pos) => {\r\n            type: import(\"./editorReducer\").Types.CommitWidgetPosChange;\r\n            payload: import(\"./editorReducer\").Pos;\r\n        };\r\n        actDeleteItems: () => {\r\n            type: import(\"./editorReducer\").Types.DeleteItem;\r\n            payload: null;\r\n        };\r\n        actCopySelectedItems: () => {\r\n            type: import(\"./editorReducer\").Types.CopySelected;\r\n            payload: null;\r\n        };\r\n        actResetDraw: () => {\r\n            type: import(\"./editorReducer\").Types.ResetDraw;\r\n            payload: null;\r\n        };\r\n        actChangeWorkingPos: (pos: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n        }) => {\r\n            type: import(\"./editorReducer\").Types.ChangeWorkingPos;\r\n            payload: {\r\n                x: number;\r\n                y: number;\r\n                scale: number;\r\n            };\r\n        };\r\n        actUndo: () => {\r\n            type: import(\"./editorReducer\").Types.Undo;\r\n            payload: null;\r\n        };\r\n        actRedo: () => {\r\n            type: import(\"./editorReducer\").Types.Redo;\r\n            payload: null;\r\n        };\r\n        actMoveCanvasToCenter: () => {\r\n            type: import(\"./editorReducer\").Types.MoveCanvasToCenter;\r\n            payload: null;\r\n        };\r\n        actSetInitCanvasPos: (pos: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n        }) => {\r\n            type: import(\"./editorReducer\").Types.SetInitCanvasPos;\r\n            payload: {\r\n                x: number;\r\n                y: number;\r\n                scale: number;\r\n            };\r\n        };\r\n        actSelectTool: (tool: import(\"./editorReducer\").Tools | null) => {\r\n            type: import(\"./editorReducer\").Types.SelectTools;\r\n            payload: import(\"./editorReducer\").Tools | null;\r\n        };\r\n    }>>;\r\n};\r\ndeclare type GetBaseState<T extends {\r\n    [k: string]: (...args: any) => any;\r\n}> = {\r\n    [K in keyof T]: ReturnType<T[K]>;\r\n};\r\nexport declare type BaseState = GetBaseState<typeof reducersMap>;\r\ndeclare const store: import(\"redux\").Store<import(\"redux\").EmptyObject & {\r\n    editorReducer: import(\"./editorReducer\").BaseState;\r\n}, import(\"./editorReducer\").GetActionTypes<{\r\n    actSelect: (indexes: number[] | null) => {\r\n        type: import(\"./editorReducer\").Types.SelectMultiple;\r\n        payload: number[] | null;\r\n    };\r\n    actSelectOne: (idx: number | null) => {\r\n        type: import(\"./editorReducer\").Types.SelectOne;\r\n        payload: number | null;\r\n    };\r\n    actChangeCanvasWH: (pos: {\r\n        w: number;\r\n        h: number;\r\n    }) => {\r\n        type: import(\"./editorReducer\").Types.ChangeCanvasWH;\r\n        payload: {\r\n            w: number;\r\n            h: number;\r\n        };\r\n    };\r\n    actAddItem: (config: import(\"../render/interfaces\").WidgetConfig) => {\r\n        type: import(\"./editorReducer\").Types.AddItem;\r\n        payload: import(\"../render/interfaces\").WidgetConfig;\r\n    };\r\n    actWidgetConfig: (config: import(\"../render/interfaces\").WidgetConfig) => {\r\n        type: import(\"./editorReducer\").Types.WidgetConfig;\r\n        payload: import(\"../render/interfaces\").WidgetConfig;\r\n    };\r\n    actStartWidgetPos: (initPos: import(\"./editorReducer\").Pos) => {\r\n        type: import(\"./editorReducer\").Types.StartWidgetChange;\r\n        payload: import(\"./editorReducer\").Pos;\r\n    };\r\n    actChangeWidgetPos: (deltaX: number, deltaY: number) => {\r\n        type: import(\"./editorReducer\").Types.ChangeWidgetPos;\r\n        payload: {\r\n            deltaX: number;\r\n            deltaY: number;\r\n        };\r\n    };\r\n    actCommitChangeWidgetPos: (pos: import(\"./editorReducer\").Pos) => {\r\n        type: import(\"./editorReducer\").Types.CommitWidgetPosChange;\r\n        payload: import(\"./editorReducer\").Pos;\r\n    };\r\n    actDeleteItems: () => {\r\n        type: import(\"./editorReducer\").Types.DeleteItem;\r\n        payload: null;\r\n    };\r\n    actCopySelectedItems: () => {\r\n        type: import(\"./editorReducer\").Types.CopySelected;\r\n        payload: null;\r\n    };\r\n    actResetDraw: () => {\r\n        type: import(\"./editorReducer\").Types.ResetDraw;\r\n        payload: null;\r\n    };\r\n    actChangeWorkingPos: (pos: {\r\n        x: number;\r\n        y: number;\r\n        scale: number;\r\n    }) => {\r\n        type: import(\"./editorReducer\").Types.ChangeWorkingPos;\r\n        payload: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n        };\r\n    };\r\n    actUndo: () => {\r\n        type: import(\"./editorReducer\").Types.Undo;\r\n        payload: null;\r\n    };\r\n    actRedo: () => {\r\n        type: import(\"./editorReducer\").Types.Redo;\r\n        payload: null;\r\n    };\r\n    actMoveCanvasToCenter: () => {\r\n        type: import(\"./editorReducer\").Types.MoveCanvasToCenter;\r\n        payload: null;\r\n    };\r\n    actSetInitCanvasPos: (pos: {\r\n        x: number;\r\n        y: number;\r\n        scale: number;\r\n    }) => {\r\n        type: import(\"./editorReducer\").Types.SetInitCanvasPos;\r\n        payload: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n        };\r\n    };\r\n    actSelectTool: (tool: import(\"./editorReducer\").Tools | null) => {\r\n        type: import(\"./editorReducer\").Types.SelectTools;\r\n        payload: import(\"./editorReducer\").Tools | null;\r\n    };\r\n}>>;\r\nexport { store };\r\n"}}
