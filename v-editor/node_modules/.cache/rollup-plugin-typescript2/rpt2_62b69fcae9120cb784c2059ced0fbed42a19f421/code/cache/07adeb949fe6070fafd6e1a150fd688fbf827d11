{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport RenderWidget from './RenderWidget';\r\nimport { connect } from 'react-redux';\r\nimport { fromEvent } from 'rxjs';\r\nimport { tap, filter, switchMapTo, switchMap, takeUntil, map, } from 'rxjs/operators';\r\nimport { EditorActions, Tools } from '../store/editorReducer';\r\nimport produce from 'immer';\r\nimport \"./style.scss\";\r\nimport { getOffsetLeft, getOffsetTop } from '../utils';\r\n/**\r\n *\r\n *\r\n * 6,5,3,2,4,1\r\n * [6]\r\n * [6]\r\n *\r\n *\r\n */\r\nvar actSelect = EditorActions.actSelect, actDeleteItems = EditorActions.actDeleteItems, actChangeWorkingPos = EditorActions.actChangeWorkingPos, actCopySelectedItems = EditorActions.actCopySelectedItems, actSetInitCanvasPos = EditorActions.actSetInitCanvasPos, actUndo = EditorActions.actUndo, actRedo = EditorActions.actRedo, actChangeWidgetPos = EditorActions.actChangeWidgetPos, actStartWidgetPos = EditorActions.actStartWidgetPos, actCommitChangeWidgetPos = EditorActions.actCommitChangeWidgetPos, actAddItem = EditorActions.actAddItem;\r\nvar mouseMove$ = fromEvent(document, \"mousemove\");\r\nvar mouseUp$ = fromEvent(document, \"mouseup\");\r\nvar keyDown$ = fromEvent(window, \"keydown\").pipe(\r\n/**@TODO delete */\r\ntap(function (e) { return console.log(e.key); }));\r\nvar keyUp$ = fromEvent(window, \"keyup\");\r\nvar keyZ$ = keyDown$.pipe(filter(function (e) { return e.key.toUpperCase() === \"Z\"; }));\r\nvar shiftOn = false;\r\nvar shift$ = keyDown$.pipe(filter(function (e) { return e.key === \"Shift\"; }));\r\nvar shiftUp$ = keyUp$.pipe(filter(function (e) { return e.key === \"Shift\"; }));\r\nvar mouseWheel$ = fromEvent(window, \"mousewheel\");\r\nvar cmd$ = keyDown$.pipe(filter(function (e) { return e.key === \"Control\"; }));\r\nvar cmdUp$ = keyUp$.pipe(filter(function (e) { return e.key === \"Control\"; }));\r\nvar alt$ = keyDown$.pipe(filter(function (e) { return e.key === \"Alt\"; }));\r\nvar initStyle = {\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    transform: \"translate(-50%, -50%)\"\r\n};\r\nvar Renderer = function (props) {\r\n    var container = useRef(null);\r\n    var bgRef = useRef(null);\r\n    var workplace = props.workplace, dispatch = props.dispatch, createWidgets = props.createWidgets, eventPool = props.eventPool, widgetsCenter = props.widgetsCenter;\r\n    var canvas = workplace.canvas, renderConfig = workplace.renderConfig;\r\n    var pos = renderConfig.pos, widgets = renderConfig.widgets;\r\n    var w = pos.w, h = pos.h;\r\n    var _a = useState([]), refLines = _a[0], setRefLines = _a[1];\r\n    var _b = useState(canvas), canvasPos = _b[0], setCanvasPos = _b[1];\r\n    var _c = useState({ x: 0, y: 0, w: 0, h: 0 }), selectArea = _c[0], setSelectArea = _c[1];\r\n    /**这里必须用一个mutable的变量存，否则一边话useEffect就重新执行 */\r\n    var initPos = useRef(__assign({}, selectArea));\r\n    var multiSelectRef = useRef(null);\r\n    var selectedRef = useRef(null);\r\n    /**处理撤销和回退 */\r\n    useEffect(function () {\r\n        var subShiftUp = shiftUp$.subscribe(function () {\r\n            shiftOn = false;\r\n        });\r\n        var subShiftDown = shift$.subscribe(function () {\r\n            shiftOn = true;\r\n        });\r\n        var subUndo = cmd$.pipe(switchMapTo(keyZ$.pipe(takeUntil(cmdUp$))), filter(function () { return !shiftOn; })).subscribe(function () {\r\n            console.log(\"undo\");\r\n            dispatch(actUndo());\r\n        });\r\n        var subRedo = cmd$.pipe(switchMapTo(shift$), switchMapTo(keyZ$.pipe(takeUntil(cmdUp$))), filter(function () { return shiftOn; })).subscribe(function () {\r\n            console.log(\"redo\");\r\n            dispatch(actRedo());\r\n        });\r\n        return function () {\r\n            subShiftDown.unsubscribe();\r\n            subShiftUp.unsubscribe();\r\n            subUndo.unsubscribe();\r\n            subRedo.unsubscribe();\r\n        };\r\n    }, [dispatch]);\r\n    /**初始化让画布处于正中间位置 */\r\n    useEffect(function () {\r\n        var _a = container.current.offsetParent, offsetWidth = _a.offsetWidth, offsetHeight = _a.offsetHeight;\r\n        var x = offsetWidth / 2 - w / 2;\r\n        var y = offsetHeight / 2 - h / 2;\r\n        var initPos = {\r\n            x: x,\r\n            y: y,\r\n            scale: 1,\r\n            centerPosition: { x: x, y: y, scale: 1 }\r\n        };\r\n        dispatch(actSetInitCanvasPos(initPos));\r\n        dispatch(actChangeWorkingPos(initPos));\r\n        setCanvasPos(initPos);\r\n    }, [dispatch, h, w]);\r\n    /**处理背景缩放，移动，删除，拷贝，多选 */\r\n    useEffect(function () {\r\n        var currCanvasPos = __assign({}, canvas);\r\n        var _container = container.current;\r\n        var bgMouseDown$ = fromEvent(bgRef.current, \"mousedown\").pipe(tap(function () {\r\n            setSelectArea({ x: 0, y: 0, w: 0, h: 0 });\r\n        }));\r\n        var multiSelectStart$ = fromEvent(multiSelectRef.current, \"mousedown\").pipe(tap(function (e) { e.stopPropagation(); }));\r\n        var mouseDown$ = fromEvent(_container, \"mousedown\").pipe(tap(function (e) { return e.stopPropagation(); }));\r\n        var mouseUp$ = fromEvent(document, \"mouseup\").pipe(tap(function () {\r\n            dispatch(actChangeWorkingPos(currCanvasPos));\r\n        }));\r\n        var subDeleteItem = keyDown$.pipe(filter(function (e) { return e.key === \"Delete\"; })).subscribe(function () {\r\n            dispatch(actDeleteItems());\r\n        });\r\n        var subBgResize = alt$.pipe(switchMapTo(mouseWheel$.pipe(map(function (e) { return e.deltaY > 0; }), takeUntil(keyUp$)))).subscribe(function (isSmaller) {\r\n            setCanvasPos(function (pos) { return produce(pos, function (it) {\r\n                it.scale = Math.max(0.1, isSmaller ? it.scale - 0.1 : it.scale + 0.1);\r\n            }); });\r\n            currCanvasPos.scale = Math.max(0.1, isSmaller ? currCanvasPos.scale - 0.1 : currCanvasPos.scale + 0.1);\r\n            dispatch(actChangeWorkingPos(currCanvasPos));\r\n        });\r\n        var subCopy = cmd$.pipe(switchMapTo(keyDown$.pipe(filter(function (e) { return e.key.toLowerCase() === \"c\"; })))).subscribe(function () {\r\n            dispatch(actCopySelectedItems());\r\n        });\r\n        var selectMain = mouseDown$\r\n            .subscribe(function () {\r\n            dispatch(actSelect(null));\r\n        });\r\n        var subBgMove = bgMouseDown$.pipe(switchMap(function (e) {\r\n            var initX = e.pageX;\r\n            var initY = e.pageY;\r\n            return mouseMove$.pipe(map(function (e) {\r\n                var x = e.pageX - initX;\r\n                var y = e.pageY - initY;\r\n                return { x: x, y: y, initX: initX, initY: initY };\r\n            }), takeUntil(mouseUp$));\r\n        })).subscribe(function (pos) {\r\n            dispatch(actSelect(null));\r\n            var nextX = canvas.x + pos.x;\r\n            var nextY = canvas.y + pos.y;\r\n            currCanvasPos.x = nextX;\r\n            currCanvasPos.y = nextY;\r\n            setCanvasPos(function (prev) { return (__assign(__assign({}, prev), { x: nextX, y: nextY })); });\r\n        });\r\n        /**拖动多选 */\r\n        var subMultiSelect = multiSelectStart$.pipe(switchMap(function (e) {\r\n            /**点击其他地方会让选中区域消失 */\r\n            setSelectArea({ x: 0, y: 0, w: 0, h: 0 });\r\n            var initX = e.pageX;\r\n            var initY = e.pageY;\r\n            var containerOffsetLeft = getOffsetLeft(container.current);\r\n            var containerOffsetTop = getOffsetTop(container.current);\r\n            return mouseMove$.pipe(map(function (e) {\r\n                var x = e.pageX;\r\n                var y = e.pageY;\r\n                var left = (x < initX ? x : initX) - containerOffsetLeft;\r\n                var top = (y < initY ? y : initY) - containerOffsetTop;\r\n                var w = Math.abs(x - initX);\r\n                var h = Math.abs(y - initY);\r\n                return { x: left, y: top, w: w, h: h };\r\n            }), takeUntil(mouseUp$));\r\n        })).subscribe(function (areaPos) {\r\n            var selectedIdxes = widgets\r\n                .map(function (_a, i) {\r\n                var _b = _a.pos, x = _b.x, y = _b.y, w = _b.w, h = _b.h;\r\n                /**判断四个点是否有一个在areaPos钟 */\r\n                if (x > areaPos.x && x < areaPos.x + areaPos.w &&\r\n                    y > areaPos.y && y < areaPos.y + areaPos.h) {\r\n                    return i;\r\n                }\r\n                if (x + w > areaPos.x && x + w < areaPos.x + areaPos.w &&\r\n                    y > areaPos.y && y < areaPos.y + areaPos.h) {\r\n                    return i;\r\n                }\r\n                if (x > areaPos.x && x < areaPos.x + areaPos.w &&\r\n                    y + h > areaPos.y && y + h < areaPos.y + areaPos.h) {\r\n                    return i;\r\n                }\r\n                if (x + w > areaPos.x && x + w < areaPos.x + areaPos.w &&\r\n                    y + h > areaPos.y && y + h < areaPos.y + areaPos.h) {\r\n                    return i;\r\n                }\r\n                return -1;\r\n            })\r\n                .filter(function (idx) { return idx !== -1; });\r\n            dispatch(actSelect(selectedIdxes.length ? selectedIdxes : null));\r\n            setSelectArea(areaPos);\r\n            initPos.current = areaPos;\r\n        });\r\n        return function () {\r\n            selectMain.unsubscribe();\r\n            subCopy.unsubscribe();\r\n            subDeleteItem.unsubscribe();\r\n            subBgMove.unsubscribe();\r\n            subBgResize.unsubscribe();\r\n            subMultiSelect.unsubscribe();\r\n        };\r\n    }, [canvas, dispatch, widgets]);\r\n    /**让画布随着redux改变 */\r\n    useEffect(function () {\r\n        var x = canvas.x, y = canvas.y;\r\n        setCanvasPos(function (prev) { return (__assign(__assign({}, prev), { x: x, y: y })); });\r\n    }, [canvas]);\r\n    /**控制选中区域消失 */\r\n    useEffect(function () {\r\n        var pos = workplace.selectArea;\r\n        setSelectArea(pos);\r\n        initPos.current = __assign({}, pos);\r\n    }, [workplace.selectArea]);\r\n    /**处理多选整体移动 */\r\n    useEffect(function () {\r\n        var selectedAreaMouseDown$ = fromEvent(selectedRef.current, \"mousedown\").pipe(tap(function (e) { return e.stopPropagation(); }));\r\n        var deltaX = 0;\r\n        var deltaY = 0;\r\n        var subSelectedAreaMove = selectedAreaMouseDown$.pipe(switchMap(function (e) {\r\n            var startX = e.pageX;\r\n            var startY = e.pageY;\r\n            dispatch(actStartWidgetPos(__assign({}, initPos.current)));\r\n            return mouseMove$.pipe(map(function (e) {\r\n                deltaX = e.pageX - startX;\r\n                deltaY = e.pageY - startY;\r\n                return { deltaX: deltaX, deltaY: deltaY };\r\n            }), takeUntil(mouseUp$.pipe(tap(function () {\r\n                initPos.current.x = initPos.current.x + deltaX;\r\n                initPos.current.y = initPos.current.y + deltaY;\r\n                dispatch(actCommitChangeWidgetPos(__assign({}, initPos.current)));\r\n            }))));\r\n        })).subscribe(function (_a) {\r\n            var deltaX = _a.deltaX, deltaY = _a.deltaY;\r\n            if (workplace.selectedIndex) {\r\n                dispatch(actChangeWidgetPos(deltaX, deltaY));\r\n            }\r\n            setSelectArea(function (pos) { return produce(pos, function (it) {\r\n                it.x = initPos.current.x + deltaX;\r\n                it.y = initPos.current.y + deltaY;\r\n            }); });\r\n        });\r\n        return function () {\r\n            subSelectedAreaMove.unsubscribe();\r\n        };\r\n    }, [dispatch, workplace.selectedIndex]);\r\n    /**松开按下工具键要让选中区域消失 */\r\n    useEffect(function () {\r\n        setSelectArea({ x: 0, y: 0, w: 0, h: 0 });\r\n        dispatch(actSelect(null));\r\n    }, [dispatch, workplace.selectedTool]);\r\n    return (_jsxs(\"div\", __assign({ className: \"work-bg relative\", ref: bgRef }, { children: [_jsxs(\"div\", __assign({ ref: container, onDragOver: function (e) { e.preventDefault(); }, onDrop: function (e) {\r\n                    var name = e.dataTransfer.getData(\"name\");\r\n                    if (name) {\r\n                        var config = widgetsCenter.create(name);\r\n                        if (config) {\r\n                            config.pos = config.pos || { x: 0, y: 0, w: 80, z: 80 };\r\n                            config.pos.x = e.pageX - getOffsetLeft(container.current) - config.pos.w / 2;\r\n                            config.pos.y = e.pageY - getOffsetTop(container.current) - config.pos.h / 2;\r\n                            dispatch(actAddItem(config));\r\n                        }\r\n                    }\r\n                }, className: \"display-view absolute\", style: canvasPos.centerPosition.x ? {\r\n                    width: w + \"px\",\r\n                    height: h + \"px\",\r\n                    transform: \"scale(\" + canvasPos.scale + \")\",\r\n                    left: canvasPos.x + \"px\",\r\n                    top: canvasPos.y + \"px\"\r\n                } : initStyle }, { children: [widgets.map(function (item, i) { return (_jsx(RenderWidget, { selected: (workplace.selectedIndex && workplace.selectedIndex.indexOf(i) !== -1) ||\r\n                            false, widgetConfig: item, idx: i, container: container, setRefLines: setRefLines, createWidgets: createWidgets, eventPool: eventPool }, i)); }),\r\n                    refLines.map(function (_a, i) {\r\n                        var isCol = _a[0], pos = _a[1], isSelectOne = _a[2];\r\n                        return (_jsx(\"div\", __assign({}, (isCol ?\r\n                            {\r\n                                className: \"ref-line-col\",\r\n                                style: {\r\n                                    left: pos + \"px\",\r\n                                    background: isSelectOne ? \"red\" : \"blue\"\r\n                                }\r\n                            } : {\r\n                            className: \"ref-line-row\",\r\n                            style: {\r\n                                top: pos + \"px\",\r\n                                background: isSelectOne ? \"red\" : \"blue\"\r\n                            }\r\n                        })), i));\r\n                    }),\r\n                    _jsx(\"div\", { className: workplace.selectedTool === Tools.Select ? \"absolute select-mask cursor\" : \"hidden\", ref: multiSelectRef }, void 0),\r\n                    _jsx(\"div\", { ref: selectedRef, className: workplace.selectedTool === Tools.Select ? \"selected-area absolute\" : \"hidden\", style: {\r\n                            left: selectArea.x,\r\n                            top: selectArea.y,\r\n                            width: selectArea.w,\r\n                            height: selectArea.h\r\n                        } }, void 0)] }), void 0),\r\n            _jsx(\"div\", { className: workplace.selectedTool === Tools.Drag ? \"absolute drag-mask\" : \"hidden\", style: {\r\n                    cursor: \"move\"\r\n                } }, void 0)] }), void 0));\r\n};\r\nexport default connect(function (state) { return ({\r\n    workplace: state.editorReducer.workplace\r\n}); }, function (dispatch) { return ({ dispatch: dispatch }); })(Renderer);\r\n","references":["D:/PROJECT/v-editor/node_modules/@types/react/index.d.ts","D:/PROJECT/v-editor/src/render/RenderWidget.tsx","D:/PROJECT/v-editor/node_modules/@types/react-redux/index.d.ts","D:/PROJECT/v-editor/src/store/index.ts","D:/PROJECT/v-editor/node_modules/redux/index.d.ts","D:/PROJECT/v-editor/node_modules/rxjs/dist/types/index.d.ts","D:/PROJECT/v-editor/node_modules/rxjs/dist/types/operators/index.d.ts","D:/PROJECT/v-editor/src/store/editorReducer.ts","D:/PROJECT/v-editor/src/render/interfaces.ts","D:/PROJECT/v-editor/node_modules/immer/dist/immer.d.ts","D:/PROJECT/v-editor/src/utils/eventEmitter.ts","D:/PROJECT/v-editor/src/render/WidgetsCenter.ts","D:/PROJECT/v-editor/src/utils/index.ts"],"dts":{"name":"D:/PROJECT/v-editor/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/render/index.d.ts","writeByteOrderMark":false,"text":"import { ComponentClass, FC } from 'react';\r\nimport { Dispatch } from \"redux\";\r\nimport { Tools } from '../store/editorReducer';\r\nimport { WidgetConfig, WidgetProps } from './interfaces';\r\nimport \"./style.scss\";\r\nimport EventEmitter from '../utils/eventEmitter';\r\nimport WidgetsCenter from './WidgetsCenter';\r\ndeclare const _default: import(\"react-redux\").ConnectedComponent<FC<{\r\n    workplace: {\r\n        renderConfig: import(\"./interfaces\").RenderConfig;\r\n        selectedIndex: number[] | null;\r\n        canvas: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n            centerPosition: {\r\n                x: number;\r\n                y: number;\r\n                scale: number;\r\n            };\r\n        };\r\n        selectArea: import(\"../store/editorReducer\").Pos;\r\n        undoStack: {\r\n            renderConfig: import(\"./interfaces\").RenderConfig;\r\n            selectArea: import(\"../store/editorReducer\").Pos;\r\n            selectedIndex: number[] | null;\r\n            selectedTool: Tools | null;\r\n        }[];\r\n        redoStack: {\r\n            renderConfig: import(\"./interfaces\").RenderConfig;\r\n            selectArea: import(\"../store/editorReducer\").Pos;\r\n            selectedIndex: number[] | null;\r\n            selectedTool: Tools | null;\r\n        }[];\r\n        selectedTool: Tools | null;\r\n        tmpPos: import(\"../store/editorReducer\").Pos[];\r\n    };\r\n    dispatch: Dispatch<import(\"redux\").AnyAction>;\r\n    createWidgets: (config: string | WidgetConfig) => FC<WidgetProps<any>> | ComponentClass<WidgetProps<any>, any> | null;\r\n    widgetsCenter: WidgetsCenter;\r\n    eventPool: EventEmitter;\r\n}>, import(\"react-redux\").Omit<{\r\n    workplace: {\r\n        renderConfig: import(\"./interfaces\").RenderConfig;\r\n        selectedIndex: number[] | null;\r\n        canvas: {\r\n            x: number;\r\n            y: number;\r\n            scale: number;\r\n            centerPosition: {\r\n                x: number;\r\n                y: number;\r\n                scale: number;\r\n            };\r\n        };\r\n        selectArea: import(\"../store/editorReducer\").Pos;\r\n        undoStack: {\r\n            renderConfig: import(\"./interfaces\").RenderConfig;\r\n            selectArea: import(\"../store/editorReducer\").Pos;\r\n            selectedIndex: number[] | null;\r\n            selectedTool: Tools | null;\r\n        }[];\r\n        redoStack: {\r\n            renderConfig: import(\"./interfaces\").RenderConfig;\r\n            selectArea: import(\"../store/editorReducer\").Pos;\r\n            selectedIndex: number[] | null;\r\n            selectedTool: Tools | null;\r\n        }[];\r\n        selectedTool: Tools | null;\r\n        tmpPos: import(\"../store/editorReducer\").Pos[];\r\n    };\r\n    dispatch: Dispatch<import(\"redux\").AnyAction>;\r\n    createWidgets: (config: string | WidgetConfig) => FC<WidgetProps<any>> | ComponentClass<WidgetProps<any>, any> | null;\r\n    widgetsCenter: WidgetsCenter;\r\n    eventPool: EventEmitter;\r\n}, \"workplace\" | \"dispatch\">>;\r\nexport default _default;\r\n"}}
