{"code":"import { __assign } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { notification, Tooltip } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditorActions } from \"../../store/editorReducer\";\r\nvar actAddItem = EditorActions.actAddItem;\r\nvar WidgetsList = function (_a) {\r\n    var widgetsCenter = _a.widgetsCenter, dispatch = _a.dispatch, allWidgets = _a.allWidgets;\r\n    var addWidget = function (name) {\r\n        var widgetConfig = widgetsCenter.create(name);\r\n        if (widgetConfig) {\r\n            dispatch(actAddItem(widgetConfig));\r\n        }\r\n        else {\r\n            notification.info({\r\n                message: \"未知错误，没有找到组件\"\r\n            });\r\n        }\r\n    };\r\n    return (_jsxs(\"div\", __assign({ className: \"widgets\" }, { children: [_jsx(\"div\", { children: \"\\u7EC4\\u4EF6\\u5217\\u8868\" }, void 0),\r\n            _jsx(\"div\", __assign({ className: \"widgets-list flex jb\" }, { children: allWidgets.map(function (_a, i) {\r\n                    var description = _a.description, FC = _a.FC;\r\n                    return (_jsx(Tooltip, __assign({ title: description.description || description.showName, color: \"blue\", placement: \"right\" }, { children: _jsxs(\"div\", __assign({ className: \"widgets-list-item\", onClick: addWidget.bind(null, description.name), onDragStart: function (e) {\r\n                                e.dataTransfer.setData(\"name\", description.name);\r\n                            }, draggable: true }, { children: [description.snapShot && _jsx(\"img\", { className: \"sm-pic\", src: description.snapShot, alt: description.name }, void 0),\r\n                                _jsx(\"div\", { children: description.showName }, void 0),\r\n                                _jsx(FC, __assign({}, description, { pos: { x: 0, y: 0, w: 80, h: 80 } }), void 0)] }), void 0) }), i));\r\n                }) }), void 0)] }), void 0));\r\n};\r\nexport default connect(function (state) { return ({}); }, function (dispatch) { return ({ dispatch: dispatch }); })(WidgetsList);\r\n","references":["D:/PROJECT/v-editor/node_modules/antd/lib/index.d.ts","D:/PROJECT/v-editor/node_modules/@types/react/index.d.ts","D:/PROJECT/v-editor/node_modules/@types/react-redux/index.d.ts","D:/PROJECT/v-editor/node_modules/redux/index.d.ts","D:/PROJECT/v-editor/src/render/interfaces.ts","D:/PROJECT/v-editor/src/render/WidgetsCenter.ts","D:/PROJECT/v-editor/src/store/index.ts","D:/PROJECT/v-editor/src/store/editorReducer.ts"],"dts":{"name":"D:/PROJECT/v-editor/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/pages/work-place/WidgetsList.d.ts","writeByteOrderMark":false,"text":"import { FC } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { WidgetPackage } from \"../../render/interfaces\";\r\nimport WidgetsCenter from \"../../render/WidgetsCenter\";\r\ndeclare const _default: import(\"react-redux\").ConnectedComponent<FC<{\r\n    widgetsCenter: WidgetsCenter;\r\n    dispatch: Dispatch<import(\"redux\").AnyAction>;\r\n    allWidgets: WidgetPackage[];\r\n}>, import(\"react-redux\").Omit<{\r\n    widgetsCenter: WidgetsCenter;\r\n    dispatch: Dispatch<import(\"redux\").AnyAction>;\r\n    allWidgets: WidgetPackage[];\r\n}, \"dispatch\">>;\r\nexport default _default;\r\n"}}
